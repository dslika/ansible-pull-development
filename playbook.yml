#!/usr/bin/env ansible-playbook

- name: Gather prerequisites 
  hosts: all
  gather_facts: True
  tasks:
    - group_by: key={{ ansible_distribution }}

- name: Install Ubuntu Packages
  hosts: Ubuntu
  become: True
  tasks:
    - apt: name=git state=latest update_cache=true cache_valid_time=600
    - apt: name=subversion state=latest update_cache=true cache_valid_time=600
    - apt: name=mercurial state=latest update_cache=true cache_valid_time=600
    - apt: name=xfsprogs state=latest update_cache=true cache_valid_time=600
    - apt: name=sshpass state=latest update_cache=true cache_valid_time=600
    - apt: name=curl state=latest
    - apt: name=apt-transport-https state=latest
    - apt: name=mysql-client state=latest
    - apt: name=mysql-workbench state=latest
    - apt: name=apache2-utils state=latest update_cache=true cache_valid_time=600
    - apt: name=apache2-utils state=latest update_cache=true cache_valid_time=600
    - apt: name=httping state=latest update_cache=true cache_valid_time=600
    - apt_key: url=https://atlassian.artifactoryonline.com/atlassian/api/gpg/key/public state=present
#   - apt_repository: repo='deb https://atlassian.artifactoryonline.com/atlassian/hipchat-apt-client $(lsb_release -c -s) main' state=present mode=0644
    - apt_repository: repo='deb https://atlassian.artifactoryonline.com/atlassian/hipchat-apt-client xenial main' state=present mode=0644
    - apt: name=hipchat4 state=latest update_cache=true

- name: Install CentOS Packages
  hosts: CentOS
  become: True
  tasks:
    - yum: name=git state=latest
    - yum: name=subversion state=latest
    - yum: name=mercurial state=latest
    - yum: name=xfsprogs state=latest
    - yum: name=sshpass state=latest
    - yum: name=curl state=latest

- name: Install JDK
  hosts: all
  become: True
  vars:
    java_version: jdk1.8.0_101
    java_path: 8u101-b13/jdk-8u101
  tasks:
    - command: wget --quiet --output-document=/root/jdk-8-{{ java_version }}.tar.gz --no-check-certificate --no-cookies --header "Cookie:oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/{{ java_path }}-linux-x64.tar.gz
    - file: path=/usr/lib/jvm owner=root group=root state=directory mode=755
    - unarchive: src=/root/jdk-8-{{ java_version }}.tar.gz dest=/usr/lib/jvm copy=no owner=root group=root mode=755 creates=/usr/lib/jvm/{{ java_version }}/COPYRIGHT
    - file: src=/usr/lib/jvm/{{ java_version }} dest=/usr/lib/jvm/oracle-jdk-8 owner=root group=root state=link
    - lineinfile: dest=/etc/environment line='JDK_HOME=/usr/lib/jvm/oracle-jdk-8'
    - lineinfile: dest=/etc/environment line='JAVA_HOME=/usr/lib/jvm/oracle-jdk-8'
    - lineinfile: dest=/etc/environment line='JAVA_CMD=/usr/lib/jvm/oracle-jdk-8/bin/java'
    - copy: src=scripts/java-environment.sh dest=/etc/profile.d/java-environment.sh owner=root group=root mode=755 backup=no

- name: Install The Software Development Kit Manager
  hosts: Ubuntu
  become: True
  tasks:
    - copy: src=scripts/install-gvm.sh dest=/tmp/install-gvm.sh owner=vagrant group=vagrant mode=755 backup=no
    - shell: sudo --user vagrant --set-home --non-interactive --login /tmp/install-gvm.sh --
    - file: path=/home/vagrant/.gvm/etc owner=vagrant group=vagrant state=directory mode=755
    - copy: src=files/gvm.config dest=/home/vagrant/.gvm/etc/config owner=vagrant group=vagrant mode=644 backup=no
    - file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Node
  hosts: Ubuntu
  become: True
  vars:
    node_version: v4.6.0
  tasks:
      - get_url: url=http://nodejs.org/dist/{{ node_version }}/node-{{ node_version }}-linux-x64.tar.gz dest=/root/node-{{ node_version }}.tar.gz mode=444
      - unarchive: src=/root/node-{{ node_version }}.tar.gz dest=/opt copy=no owner=root group=root creates=/opt/node-{{ node_version }}-linux-x64/LICENSE
      - file: src=/opt/node-{{ node_version }}-linux-x64/bin/node path=/usr/local/bin/node state=link
      - file: src=/opt/node-{{ node_version }}-linux-x64/bin/npm path=/usr/local/bin/npm state=link
      - command: /usr/local/bin/npm install -g npm@latest
      - npm: name=yo global=yes state=latest
#     - file: src=/opt/node-{{ node_version }}-linux-x64/bin/yo path=/usr/local/bin/yo state=link
      - npm: name=bower global=yes state=latest
#     - file: src=/opt/node-{{ node_version }}-linux-x64/bin/bower path=/usr/local/bin/bower state=link
      - npm: name=grunt-cli global=yes state=latest
#     - file: src=/opt/node-{{ node_version }}-linux-x64/bin/grunt path=/usr/local/bin/grunt state=link
      - npm: name=gulp-cli global=yes state=latest
#     - file: src=/opt/node-{{ node_version }}-linux-x64/bin/gulp path=/usr/local/bin/gulp state=link
      - npm: name=generator-jhipster global=yes state=latest
      - npm: name=nvm global=yes state=latest
#     - file: src=/opt/node-{{ node_version }}-linux-x64/bin/nvm path=/usr/local/bin/nvm state=link
      - file: path=/opt owner=root group=root recurse=true state=directory
# we are supposed to update the path to export PATH=./node_modules/.bin:$PATH but I'm not exactly sure what the best way to do that is yet

- name: Jetbrains IntelliJ IDEA
  hosts: all
  become: False
  vars:
    version: 2016.2.4
    build: 162.2032.8
  tasks:
      - file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - get_url: url=https://download.jetbrains.com/idea/ideaIU-{{ version }}.tar.gz dest=/home/vagrant/Downloads/idea-{{ version }}.tar.gz mode=444
      - unarchive: src=/home/vagrant/Downloads/idea-{{ version }}.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/idea-IU-{{ build }}/build.txt
      - file: src=/home/vagrant/Software/idea-IU-{{ build }} path=/home/vagrant/Software/idea state=link
      - file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - copy: src=files/InjelliJ.desktop dest=/home/vagrant/Desktop/InjelliJ.desktop owner=vagrant group=vagrant backup=no mode=755
      - lineinfile: dest=/etc/environment line='IDEA_JDK=/usr/lib/jvm/oracle-jdk-8'
      - copy: src=scripts/idea-environment.sh dest=/etc/profile.d/idea-environment.sh owner=root group=root mode=755 backup=no
      - file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Jetbrain's PyCharm IDE
  hosts: all
  become: False
  vars:
    version: 2016.2.3
  tasks:
      - file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - get_url: url=https://download.jetbrains.com/python/pycharm-professional-{{ version }}.tar.gz dest=/home/vagrant/Downloads/pycharm-{{ version }}.tar.gz mode=444
      - unarchive: src=/home/vagrant/Downloads/pycharm-{{ version }}.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/pycharm-{{ version }}/build.txt
      - file: src=/home/vagrant/Software/pycharm-{{ version }} path=/home/vagrant/Software/pycharm state=link
      - file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - copy: src=files/PyCharm.desktop dest=/home/vagrant/Desktop/PyCharm.desktop owner=vagrant group=vagrant backup=no mode=755
      - lineinfile: dest=/etc/environment line='PYCHARM_JDK=/usr/lib/jvm/oracle-jdk-8'
      - copy: src=scripts/pycharm-environment.sh dest=/etc/profile.d/pycharm-environment.sh owner=root group=root mode=755 backup=no
      - file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Jetbrain's WebStorm IDE
  hosts: all
  become: False
  vars:
    version: 2016.2.3
    build: 162.1812.21
  tasks:
      - file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - get_url: url=https://download.jetbrains.com/webstorm/WebStorm-{{ version }}.tar.gz dest=/home/vagrant/Downloads/webstorm-{{ version }}.tar.gz mode=444
      - unarchive: src=/home/vagrant/Downloads/webstorm-{{ version }}.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/WebStorm-{{ build }}/build.txt
      - file: src=/home/vagrant/Software/WebStorm-{{ build }} path=/home/vagrant/Software/webstorm state=link
      - file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - copy: src=files/WebStorm.desktop dest=/home/vagrant/Desktop/WebStorm.desktop owner=vagrant group=vagrant backup=no mode=755
      - lineinfile: dest=/etc/environment line='WEBIDE_JDK=/usr/lib/jvm/oracle-jdk-8'
      - copy: src=scripts/webstorm-environment.sh dest=/etc/profile.d/webstorm-environment.sh owner=root group=root mode=755 backup=no
      - file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Jetbrains DataGrip IDE
  hosts: all
  become: False
  vars:
    version: 2016.2.3
  tasks:
      - file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - get_url: url=https://download.jetbrains.com/datagrip/datagrip-{{ version }}.tar.gz dest=/home/vagrant/Downloads/datagrip-{{ version }}.tar.gz mode=444
      - unarchive: src=/home/vagrant/Downloads/datagrip-{{ version }}.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/DataGrip-{{ version }}/build.txt
      - file: src=/home/vagrant/Software/DataGrip-{{ version }} path=/home/vagrant/Software/datagrip state=link
      - file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - copy: src=files/DataGrip.desktop dest=/home/vagrant/Desktop/DataGrip.desktop owner=vagrant group=vagrant backup=no mode=755
      - lineinfile: dest=/etc/environment line='DATAGRIP_JDK=/usr/lib/jvm/oracle-jdk-8'
      - copy: src=scripts/datagrip-environment.sh dest=/etc/profile.d/datagrip-environment.sh owner=root group=root mode=755 backup=no
      - file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Jetbrains RubyMine IDE
  hosts: all
  become: False
  vars:
    version: 2016.2.4
  tasks:
      - file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - get_url: url=https://download.jetbrains.com/ruby/RubyMine-{{ version }}.tar.gz dest=/home/vagrant/Downloads/RubyMine-{{ version }}.tar.gz mode=444
      - unarchive: src=/home/vagrant/Downloads/RubyMine-{{ version }}.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/RubyMine-{{ version }}/build.txt
      - file: src=/home/vagrant/Software/RubyMine-{{ version }} path=/home/vagrant/Software/rubymine state=link
      - file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - copy: src=files/RubyMine.desktop dest=/home/vagrant/Desktop/RubyMine.desktop owner=vagrant group=vagrant backup=no mode=755
      - lineinfile: dest=/etc/environment line='DATAGRIP_JDK=/usr/lib/jvm/oracle-jdk-8'
      - copy: src=scripts/rubymine-environment.sh dest=/etc/profile.d/rubymine-environment.sh owner=root group=root mode=755 backup=no
      - file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Jetbrains CLion IDE
  hosts: all
  become: False
  vars:
    version: 2016.2.2
  tasks:
      - file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - get_url: url=https://download.jetbrains.com/cpp/CLion-{{ version }}.tar.gz dest=/home/vagrant/Downloads/CLion-{{ version }}.tar.gz mode=444
      - unarchive: src=/home/vagrant/Downloads/CLion-{{ version }}.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/CLion-{{ version }}/build.txt
      - file: src=/home/vagrant/Software/clion-{{ version }} path=/home/vagrant/Software/clion state=link
      - file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - copy: src=files/CLion.desktop dest=/home/vagrant/Desktop/CLion.desktop owner=vagrant group=vagrant backup=no mode=755
      - lineinfile: dest=/etc/environment line='CL_JDK=/usr/lib/jvm/oracle-jdk-8'
      - copy: src=scripts/clion-environment.sh dest=/etc/profile.d/clion-environment.sh owner=root group=root mode=755 backup=no
      - file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Jetbrains PhpStorm
  hosts: all
  become: False
  vars:
    version: 2016.2.1
    build: 162.1889.1
  tasks:
      - file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - get_url: url=https://download.jetbrains.com/webide/PhpStorm-{{ version }}.tar.gz dest=/home/vagrant/Downloads/PhpStorm-{{ version }}.tar.gz mode=444
      - unarchive: src=/home/vagrant/Downloads/PhpStorm-{{ version }}.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/PhpStorm-{{ build }}/build.txt
      - file: src=/home/vagrant/Software/PhpStorm-{{ build }} path=/home/vagrant/Software/phpstorm state=link
      - file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - copy: src=files/PhpStorm.desktop dest=/home/vagrant/Desktop/PhpStorm.desktop owner=vagrant group=vagrant backup=no mode=755
      - lineinfile: dest=/etc/environment line='PHPSTORM_JDK=/usr/lib/jvm/oracle-jdk-8'
      - copy: src=scripts/phpstorm-environment.sh dest=/etc/profile.d/phpstorm-environment.sh owner=root group=root mode=755 backup=no
      - file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: logFACES Client
  hosts: all
  become: False
  vars:
    version: 4.3.0
  tasks:
      - file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - get_url: url=http://www.moonlit-software.com/logfaces/downloads/lfc.{{ version }}.linux.gtk.x86_64.tar.gz dest=/home/vagrant/Downloads/logfaces-{{ version }}.tar.gz mode=444
      - unarchive: src=/home/vagrant/Downloads/logfaces-{{ version }}.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/logFacesClient/about.html
      - file: src=/home/vagrant/Software/logFacesClient path=/home/vagrant/Software/logfaces state=link
      - file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - copy: src=files/logFACES.desktop dest=/home/vagrant/Desktop/logFACES.desktop owner=vagrant group=vagrant backup=no mode=755
      - file: src=/usr/lib/jvm/oracle-jdk-8/jre path=/home/vagrant/Software/logfaces/jre state=link
      - file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory
      
- name: Create Source Folders
  hosts: all
  become: False
  tasks:
      - file: path=/home/vagrant/GitHub owner=vagrant group=vagrant state=directory mode=755
      - file: path=/home/vagrant/Bitbucket owner=vagrant group=vagrant state=directory mode=755
      - file: path=/home/vagrant/.lazybones owner=vagrant group=vagrant state=directory mode=755
      - copy: src=files/config.groovy dest=/home/vagrant/.lazybones/config.groovy owner=vagrant group=vagrant backup=no mode=744

- name: Install Docker Container Launchers
  hosts: Ubuntu
  become: False
  tasks:
      - file: path=/home/vagrant/GitHub owner=vagrant group=vagrant state=directory mode=755
      - file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - file: path=/home/vagrant/bin owner=vagrant group=vagrant state=directory mode=755

#     - git: repo=https://github.com/kurron/docker-intellij.git dest=/home/vagrant/GitHub/docker-intellij
#     - copy: src=files/IntelliJ-Docker.desktop dest=/home/vagrant/Desktop/IntelliJ-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

#     - git: repo=https://github.com/kurron/docker-pycharm.git dest=/home/vagrant/GitHub/docker-pycharm
#     - copy: src=files/PyCharm-Docker.desktop dest=/home/vagrant/Desktop/PyCharm-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

#     - git: repo=https://github.com/kurron/docker-webstorm.git dest=/home/vagrant/GitHub/docker-webstorm
#     - copy: src=files/WebStorm-Docker.desktop dest=/home/vagrant/Desktop/WebStorm-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

#     - git: repo=https://github.com/kurron/docker-php-storm.git dest=/home/vagrant/GitHub/docker-php-storm
#     - copy: src=files/PhpStorm-Docker.desktop dest=/home/vagrant/Desktop/PhpStorm-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

#     - git: repo=https://github.com/kurron/docker-rubymine.git dest=/home/vagrant/GitHub/docker-rubymine
#     - copy: src=files/RubyMine-Docker.desktop dest=/home/vagrant/Desktop/RubyMine-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

#     - git: repo=https://github.com/kurron/docker-clion.git dest=/home/vagrant/GitHub/docker-clion
#     - copy: src=files/CLion-Docker.desktop dest=/home/vagrant/Desktop/CLion-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

#     - git: repo=https://github.com/kurron/docker-0xdbe.git dest=/home/vagrant/GitHub/docker-0xdbe
#     - copy: src=files/0xDBE-Docker.desktop dest=/home/vagrant/Desktop/0xDBE-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

      - git: repo=https://github.com/kurron/docker-charles-proxy.git dest=/home/vagrant/GitHub/docker-charles-proxy
      - copy: src=files/Charles-Docker.desktop dest=/home/vagrant/Desktop/Charles-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

#     - git: repo=https://github.com/kurron/docker-dbvisualizer.git dest=/home/vagrant/GitHub/docker-dbvisualizer
#     - copy: src=files/Database-Docker.desktop dest=/home/vagrant/Desktop/Database-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

#     - git: repo=https://github.com/kurron/docker-logfaces-client.git dest=/home/vagrant/GitHub/docker-logfaces-client
#     - copy: src=files/logFACES-Docker.desktop dest=/home/vagrant/Desktop/logFACES-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

#     - git: repo=https://github.com/kurron/docker-emacs.git dest=/home/vagrant/GitHub/docker-emacs
#     - copy: src=files/Emacs-Docker.desktop dest=/home/vagrant/Desktop/Emacs-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

      - git: repo=https://github.com/kurron/docker-jmeter.git dest=/home/vagrant/GitHub/docker-jmeter
      - copy: src=files/JMeter-Docker.desktop dest=/home/vagrant/Desktop/JMeter-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

#     - git: repo=https://github.com/kurron/docker-android-studio.git dest=/home/vagrant/GitHub/docker-android-studio
#     - copy: src=files/Studio-Docker.desktop dest=/home/vagrant/Desktop/Studio-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

#     - git: repo=https://github.com/kurron/docker-mps.git dest=/home/vagrant/GitHub/docker-mps
#     - copy: src=files/MPS-Docker.desktop dest=/home/vagrant/Desktop/MPS-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

#     - git: repo=https://github.com/kurron/docker-sts.git dest=/home/vagrant/GitHub/docker-sts
#     - copy: src=files/STS-Docker.desktop dest=/home/vagrant/Desktop/STS-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

#     - git: repo=https://github.com/kurron/docker-ant.git dest=/home/vagrant/GitHub/docker-ant
#     - file: src=/home/vagrant/GitHub/docker-ant/ant.sh path=/home/vagrant/bin/ant state=link

#     - git: repo=https://github.com/kurron/docker-maven.git dest=/home/vagrant/GitHub/docker-maven
#     - file: src=/home/vagrant/GitHub/docker-maven/mvn.sh path=/home/vagrant/bin/mvn state=link

#     - git: repo=https://github.com/kurron/docker-java-runtime.git dest=/home/vagrant/GitHub/docker-java-runtime
#     - file: src=/home/vagrant/GitHub/docker-java-runtime/java.sh path=/home/vagrant/bin/jrt state=link

#     - git: repo=https://github.com/kurron/docker-scala.git dest=/home/vagrant/GitHub/docker-scala
#     - file: src=/home/vagrant/GitHub/docker-scala/fsc.sh path=/home/vagrant/bin/fsc state=link
#     - file: src=/home/vagrant/GitHub/docker-scala/scalac.sh path=/home/vagrant/bin/scalac state=link
#     - file: src=/home/vagrant/GitHub/docker-scala/scala-repl.sh path=/home/vagrant/bin/scala-repl state=link
#     - file: src=/home/vagrant/GitHub/docker-scala/scala.sh path=/home/vagrant/bin/scala state=link

      - lineinfile: dest=/home/vagrant/.bashrc line='/usr/bin/xhost +'

#     - copy: src=scripts/prime-images.sh dest=/home/vagrant/bin/prime-images.sh owner=vagrant group=vagrant backup=no mode=755

      - file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Install HTTP IE (cURL replacement)
  hosts: all
  become: True
  tasks:
      - pip: name=setuptools
      - pip: name=httpie

- name: Install Python Development Tools
  hosts: all
  become: True
  tasks:
      - pip: name=virtualenv

- name: Add host names for Dockered services
  hosts: all
  become: True
  tasks:
      - lineinfile: dest=/etc/hosts line='127.0.0.1 mongo'
      - lineinfile: dest=/etc/hosts line='127.0.0.1 mongodb'
      - lineinfile: dest=/etc/hosts line='127.0.0.1 redis'
      - lineinfile: dest=/etc/hosts line='127.0.0.1 mysql'
      - lineinfile: dest=/etc/hosts line='127.0.0.1 postgresql'
      - lineinfile: dest=/etc/hosts line='127.0.0.1 rabbitmq'
